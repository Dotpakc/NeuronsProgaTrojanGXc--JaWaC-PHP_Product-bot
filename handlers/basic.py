from aiogram import Router,F,types
from aiogram.filters import Command


from keyboards.main_kb import main_keyboard,main_back_keyboard

router = Router()





@router.message(Command('start'))
async def cmd_start(message: types.Message):
    await message.reply("–ü—Ä–∏–≤—ñ—Ç!\n –Ø –±–æ—Ç –∫–æ–º–ø–∞–Ω—ñ—ó Hillel IT School.\n –û–±–µ—Ä–∏ –ø—É–Ω–∫—Ç –º–µ–Ω—é üëáüèª"
                        ,reply_markup=main_keyboard.as_markup())
    

@router.callback_query(F.data == 'main_back')
async def main_back(call: types.CallbackQuery):
    if call.message.photo:
        await call.message.answer("–û–±–µ—Ä–∏ –ø—É–Ω–∫—Ç –º–µ–Ω—é üëáüèª",reply_markup=main_keyboard.as_markup())
        await call.message.delete()
    else:
        await call.message.edit_text("–û–±–µ—Ä–∏ –ø—É–Ω–∫—Ç –º–µ–Ω—é üëáüèª",reply_markup=main_keyboard.as_markup())


    
@router.callback_query(F.data == 'support')
async def support(call: types.CallbackQuery):
    await call.message.edit_text("–ü—Ä–∏–≤—ñ—Ç! –°–ª—É–∂–±–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –∫–æ–º–ø–∞–Ω—ñ—ó \"Hillel\".\n–ù–∞–ø–∏—à—ñ—Ç—å —Å–≤–æ—î –ø–∏—Ç–∞–Ω–Ω—è:"
                      ,reply_markup=main_back_keyboard.as_markup())
    

@router.callback_query(F.data == 'contacts')
async def contacts(call: types.CallbackQuery):
    await call.message.edit_text("–ù–∞ –≤—Å—ñ –≤–∞—à—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –¥–∞–¥—É—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏.\n"
                                 "üìû–¢–µ–ª–µ—Ñ–æ–Ω: 0800 20 8020 –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ –ø–æ –£–∫—Ä–∞—ó–Ω—ñ\n"
                                 "üìßEmail:online@ithillel.ua\n"
    , reply_markup=main_back_keyboard.as_markup())
    
@router.callback_query(F.data == 'about')
async def about(call: types.CallbackQuery):
    await call.message.edit_text("–ö–æ–º–ø'—é—Ç–µ—Ä–Ω–∞ —à–∫–æ–ª–∞ Hillel ‚Äî –æ–¥–Ω–∞ –∑ –Ω–∞–π–±—ñ–ª—å—à–∏—Ö IT-—à–∫—ñ–ª –≤ –£–∫—Ä–∞—ó–Ω—ñ, —ñ –∑ –∫–æ–∂–Ω–∏–º —Ä–æ–∫–æ–º –º–∏ –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ —Ä–æ–∑–≤–∏–≤–∞—Ç–∏—Å—è —ñ –≤–ø—Ä–æ–≤–∞–¥–∂—É–≤–∞—Ç–∏ —ñ–Ω–Ω–æ–≤–∞—Ü—ñ—ó —É –Ω–∞–≤—á–∞–Ω–Ω—è."
                                "\n\n–î–æ –Ω–∞—Å –ø—Ä–∏—Ö–æ–¥—è—Ç—å —ñ —Ç—ñ, —Ö—Ç–æ —Ö–æ—á–µ –ø—Ä–∏–¥–±–∞—Ç–∏ –Ω–æ–≤—É –ø—Ä–æ—Ñ–µ—Å—ñ—é –∞–±–æ ¬´–ø—Ä–æ–∫–∞—á–∞—Ç–∏¬ª –≤–∂–µ —ñ—Å–Ω—É—é—á—ñ –∑–Ω–∞–Ω–Ω—è, —ñ –ª—é–¥–∏, —è–∫—ñ –±–∞–∂–∞—é—Ç—å –ø—ñ–¥–≤–∏—â–∏—Ç–∏ —Å–≤–æ—é –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—é."
                                "\n\n–û–¥–Ω–∏–º –∑ –∫–ª—é—á–æ–≤–∏—Ö –ø–æ–∫–∞–∑–Ω–∏–∫—ñ–≤ –Ω–∞—à–æ—ó —Ä–æ–±–æ—Ç–∏ —î –≤—ñ–¥—Å–æ—Ç–æ–∫ –ø—Ä–∞—Ü–µ–≤–ª–∞—à—Ç–æ–≤–∞–Ω–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤. –î–ª—è —Ç–æ–≥–æ, —â–æ–± —Ü–µ–π –ø–æ–∫–∞–∑–Ω–∏–∫ –±—É–≤ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–∏—Å–æ–∫–∏–º, –¥–æ –≤–∏–∫–ª–∞–¥–∞—Ü—å–∫–æ–≥–æ —Å–∫–ª–∞–¥—É –º–∏ –∑–∞–ø—Ä–æ—à—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –ø—Ä–∞–∫—Ç–∏–∫—É—é—á–∏—Ö —Ñ–∞—Ö—ñ–≤—Ü—ñ–≤ –∑ –∫—Ä–∞—â–∏—Ö IT-–∫–æ–º–ø–∞–Ω—ñ–π, –ø—ñ–¥–±–∏—Ä–∞—î–º–æ –∫–æ—Ä–∏—Å–Ω—ñ –≤—ñ–¥–µ–æ–º–∞—Ç–µ—Ä—ñ–∞–ª–∏ —ñ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –æ—Ä–≥–∞–Ω—ñ–∑–æ–≤—É—î–º–æ –Ω–∞–≤—á–∞–ª—å–Ω–∏–π –ø—Ä–æ—Ü–µ—Å."
                                "\n\n–ó–Ω–∞–Ω–Ω—è –¥–æ–ø–æ–º–∞–≥–∞—é—Ç—å –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –∂–∏—Ç—Ç—è –Ω–∞ –∫—Ä–∞—â–µ. –í—á–∏—Å—è –∑–∞—Ä–∞–¥–∏ –º—Ä—ñ—ó üöÄ"
                                 , reply_markup=main_back_keyboard.as_markup())
    
@router.callback_query(F.data == 'merch')
async def merch(call: types.CallbackQuery):
    link_markup = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [
                types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω", url="https://gift.ithillel.ua/")
            ],
            [
                types.InlineKeyboardButton(text="üëà –í –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="main_back")
            ]
        ]
    )
    
    await call.message.edit_text("–í–≤–∞–∂–∞—î—Ç–µ, —â–æ —ñ–Ω–≤–µ—Å—Ç–∏—Ü—ñ—è –≤ –º–∞–π–±—É—Ç–Ω—î ‚Äî —Ü–µ –Ω–∞–π–∫—Ä–∞—â–∏–π –ø–æ–¥–∞—Ä—É–Ω–æ–∫? –ú–∏ —Ç–µ–∂ üòâ"
                                 "\n\n–¢–æ–º—É —Ç–µ–ø–µ—Ä —É –≤–∞—Å —î –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –ø–æ–¥–∞—Ä—É–≤–∞—Ç–∏ —Ä–∞–¥—ñ—Å—Ç—å –∑–¥–æ–±—É–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö –Ω–∞–≤–∏—á–æ–∫ —Ç–∞ –ø—Ä–æ—Ñ–µ—Å—ñ–π –≤–∞—à—ñ–π –∫–æ—Ö–∞–Ω—ñ–π –ª—é–¥–∏–Ω—ñ, –¥—Ä—É–∑—è–º –∞–±–æ —á–ª–µ–Ω–∞–º —Ä–æ–¥–∏–Ω–∏"
                                 "\n\n–ö–Ω–∏–≥–∞ —Ü–µ –∫—Ä–∞—â—ñ–π –ø–æ–¥–∞—Ä—É–Ω–æ–∫, –∞ –∫—É—Ä—Å —É –ö–æ–º–ø'—é—Ç–µ—Ä–Ω—ñ–π —à–∫–æ–ª—ñ Hillel ‚Äî –Ω–∞–π–∫–æ—Ä–∏—Å–Ω—ñ—à–∏–π ;) "
                                , reply_markup=link_markup)